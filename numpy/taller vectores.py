# -*- coding: utf-8 -*-
"""numpy_practica(1).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ek-1raQDFxYDYEZWd7-cxRhInFUoqnJa
"""

# importar numpy as np
import numpy as np

# crear lista con numeros primos
numeros_primos = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]
numeros_primos

# crear array a partir de lista
import numpy as np

numeros_primos = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]

array_numeros_primos = np.array(numeros_primos)

print(array_numeros_primos)

# crear arrays con ceros o cómo inicializar un arreglo de numpy
import numpy as np

array_zeros = np.zeros(10)
print(array_zeros)

# crear arrays con números
array_numeros = np.arange(10)
print(array_numeros)

# array con numeros sucesivos
array_pares=np.arange(0,20,2)
array_pares

# haciendo un reshape para dos dimensiones
array_pares=np.arange(0,20,2)

array_pares=array_pares.reshape(2,5)
array_pares

"""# Punto 2:"""

# operaciones aritmeticas sobre np array 1-dimension y 2-dimension
array_impares = array_pares + 1
array_impares

# multiplicar por 100
array_impares * 100

# resta entre arrays
array_impares - array_pares

# cuidado con la división entre cero
array_impares / array_pares

# métodos asociados a estadística
# suma
suma = np.sum(array_numeros_primos)
print("Suma:", suma)

# promedio
promedio = np.mean(array_numeros_primos)
print("Promedio:", promedio)

# varianza
varianza = np.var(array_numeros_primos)
print("Varianza:", varianza)

# como ordenar un np array
import numpy as np

# Crear un array desordenado
array_desordenado = np.array([17, 3, 11, 29, 5, 2, 23, 13, 7, 19])
print("Array original:", array_desordenado)

# orden ascendente: de menor a mayor
orden_asc = np.sort(array_numeros_primos)
print("Orden ascendente:", orden_asc)

# orden descendente: de mayor a menor
orden_desc = np.sort(array_numeros_primos)[::-1]
print("Orden descendente:", orden_desc)

"""# Punto 3:"""

# Como seleccionar elements
import numpy as np

array_1d = np.array([10, 20, 30, 40, 50])

# Seleccionar un solo elemento
print("Elemento en posición 0:", array_1d[0])     # 10
print("Elemento en posición 3:", array_1d[3])     # 40

# Seleccionar un elemento
A = np.arange(0,20,2).reshape(2,5)
A

# seleccionar el primer elemento
A[0,0]

# seleccionar algún otro elemento
A[1,3]

A[1,2]

# Seleccionar varios elementos
import numpy as np

array = np.array([10, 20, 30, 40, 50])

# Seleccionar elementos en posiciones 0, 2 y 4
seleccionados = array[[0, 2, 4]]
print("Elementos en índices 0, 2, 4:", seleccionados)  # [10 30 50]

# seleccionar por fila
A[1,:]

# seleccionar por columna
A[:,4]

# Utilizar filter
import numpy as np

array = np.array([5, 12, 19, 23, 30, 3, 18])

# Filtrar menores de 20
menores_20 = array[array < 20]

print("Elementos menores de 20:", menores_20)

# conidicion para menores de 20
import numpy as np

array = np.array([5, 12, 19, 23, 30, 3, 18])

# Condición: menores de 20
menores_20 = array[array < 20]

print("Elementos menores de 20:", menores_20)

# filtrar menores de 20
import numpy as np

array = np.array([5, 12, 19, 23, 30, 3, 18])

# Filtrar menores de 20
menores_20 = array[array < 20]

print("Elementos menores de 20:", menores_20)