# -*- coding: utf-8 -*-
"""Sesion 11.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BRdWwbVd-DBwwgkWCipHcDgo9p_TNGXM
"""

# Creación de un diccionario de forma directa
d1 = {
    "Nombre": "Carolina",
    "Edad": 26,
    "Documento": 1004671669
}
print(d1)

# Creación de un diccionario usando la función dict() con lista de tuplas
d2 = dict([
    ("Nombre", "Carolina"),
    ("Edad", 26),
    ("Documento", 1004671669)
])
print(d2)

# Creación de un diccionario usando parámetros nombrados
d3 = dict(Nombre="Carolina",
          Edad=26,
          Documento=1004671669)
print(d3)

# Acceso a valores usando la clave directamente
print(d1["Nombre"])
print(d1["Edad"])
print(d1["Documento"])

# Acceso a valores usando el método get() (más seguro porque no lanza error si la clave no existe)
print(d1.get("Nombre"))
print(d1.get("Edad"))
print(d1.get("Documento"))

# Modificación de un valor existente
d1["Nombre"] = "Laura"
print(d1)
# Agregar una nueva clave-valor al diccionario
d1["Direccion"] = "Calle 123"
print(d1)

# Recorrer el diccionario imprimiendo las claves
for x in d1:
    print(x)

# Recorrer el diccionario imprimiendo los valores
for x in d1:
    print(d1[x])

# Recorrer el diccionario imprimiendo clave y valor
for x, y in d1.items():
    print(x, y)

# Diccionarios anidados (diccionario dentro de otro diccionario)
anidado1 = {"a": 1, "b": 2}
anidado2 = {"a": 1, "b": 2}

d = {
    "anidado1": anidado1,
    "anidado2": anidado2
}
print(d)

# Vaciar un diccionario con clear()
d = {"a": 1, "b": 2}
d.clear()
print(d)

# Uso de get() cuando la clave existe y cuando no existe
d = {"a": 1, "b": 2}
print(d.get("a"))   # Devuelve el valor 1
print(d.get("c"))   # Devuelve None (clave no existe)

# items() devuelve una vista de pares clave-valor
d = {"a": 1, "b": 2}
it = d.items()
print(it)              # Vista de los items
print(list(it))        # Convertir a lista
print(list(it)[0][0])  # Acceder a la primera clave

# keys() devuelve las claves del diccionario
d = {"a": 1, "b": 2}
print(d.keys())        # Vista de claves
print(list(d.keys()))  # Convertir a lista

# values() devuelve los valores del diccionario
d = {"a": 1, "b": 2}
print(list(d.values()))

# pop() elimina una clave específica (si no existe, da error salvo que se dé un valor por defecto)
d = {"a": 1, "b": 2}
d.pop("a")   # Elimina la clave "a"
print(d)

d = {"a": 1, "b": 2}
d.pop("c", 1)  # Intenta eliminar "c", pero como no existe devuelve 1 y no lanza error
print(d)

# popitem() elimina el último par agregado
d = {"a": 1, "b": 2}
d.popitem()
print(d)

# update() fusiona diccionarios (sobrescribe claves repetidas)
d1 = {"a": 1, "b": 2}
d2 = {"c": 0, "d": 400}
d1.update(d2)
print(d1)